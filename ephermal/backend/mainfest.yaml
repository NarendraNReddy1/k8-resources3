kind: ConfigMap
apiVersion: v1
metadata:
  name: backend
  namespace: expense
data:
  DB_HOST: mysql # mysql component service name
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: backend
  namespace: expense
  labels:
    component: backend
    project: expense
    tier: app
spec:
  replicas: 2
  selector:
    matchLabels:
      component: backend
      project: expense
      tier: app
  template:
    metadata:
      labels:
        component: backend
        project: expense
        tier: app
    spec:
      initContainers:
      - name: init-myservice
        image: busybox:1.28
        command: ['sh', '-c', "until nslookup mysql; do echo waiting for myservice; sleep 2; done"]      
      containers:
      - name: backend
        image: narendranreddy/backend:v1.0
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "150m"
            memory: "256Mi" 
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          failureThreshold: 2
          periodSeconds: 5
          initialDelaySeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          failureThreshold: 2 # Reboot after 2 failures 
          periodSeconds: 5     # 5 secs periodic check
          initialDelaySeconds: 30   # Initial delay is 30 secs                       
        envFrom:
        - configMapRef:
            name: backend
---
kind: Service
apiVersion: v1
metadata:
  name: backend
  namespace: expense
spec:
  selector:
    component: backend
    project: expense
    tier: app
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080              